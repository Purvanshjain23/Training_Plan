"""
Unit tests for ``data_processing`` module.

This file includes starter tests for the functions defined in
``python_examples/data_processing.py``.  Use these tests as a baseline to
validate the implementations generated by AI.  You are encouraged to add more
tests to cover edge cases and error handling.
"""

import pytest
from python_examples.data_processing import (
    calculate_student_statistics,
    normalise_scores,
    group_by_grade,
)


def test_calculate_student_statistics_basic() -> None:
    scores = [90, 80, 70]
    avg, med, max_score = calculate_student_statistics(scores)
    assert avg == pytest.approx(80.0)
    assert med == pytest.approx(80.0)
    assert max_score == 90


def test_calculate_student_statistics_even_count() -> None:
    scores = [100.0, 75.5]
    avg, med, max_score = calculate_student_statistics(scores)
    assert avg == pytest.approx(87.75)
    assert med == pytest.approx(87.75)
    assert max_score == 100.0


def test_normalise_scores_basic() -> None:
    assert normalise_scores([25, 50], target=100) == [50.0, 100.0]


def test_normalise_scores_empty() -> None:
    assert normalise_scores([], target=100) == []


def test_group_by_grade_basic() -> None:
    result = group_by_grade([95, 82, 67, 50])
    # The result can include keys in any order; check contents
    assert result['A'] == [95]
    assert result['B'] == [82]
    assert result['D'] == [67]
    assert result['F'] == [50]